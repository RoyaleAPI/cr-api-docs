import{_ as p,M as o,p as c,q as i,R as s,t as n,N as e,a1 as a}from"./framework-96b046e1.js";const l={},u=a('<h1 id="authentication" tabindex="-1"><a class="header-anchor" href="#authentication" aria-hidden="true">#</a> Authentication</h1><p>All API requests must be accompanied by a developer key. This key is a unique identifier to an individual developer and you should not share it with anyone else.</p><h2 id="authenticated-requests" tabindex="-1"><a class="header-anchor" href="#authenticated-requests" aria-hidden="true">#</a> Authenticated Requests</h2><p>You must authenticate your requests using <strong>custom headers</strong>. Add a key named <code>auth</code> with value <code>&lt;token&gt;</code> to your header when you make your requests.</p><p>Additionally, we support <strong>Bearer Token</strong> authorization. Bearer tokens use a field named <code>Authorization</code> with value <code>Bearer &lt;token&gt;</code> in the header.</p><div class="custom-container tip"><p class="custom-container-title">Note</p><p>Set your token as an <strong>environment variable</strong> or save it as part of the Authorization setting in your <strong>Postman Collection</strong> settings so you donâ€™t need to ever type it again.</p></div><h2 id="key-management" tabindex="-1"><a class="header-anchor" href="#key-management" aria-hidden="true">#</a> Key Management</h2><ol><li>Once issued, your key will be active.</li><li>Your developer key will remain active as long as you remain a user on our Discord server. Your key will be automatically disabled once you have left the server.</li><li>We reserve the right to permanently blacklist keys / developers who have been shown to abuse the API with requests.</li></ol><h3 id="generating-new-keys" tabindex="-1"><a class="header-anchor" href="#generating-new-keys" aria-hidden="true">#</a> Generating new keys</h3>',9),r={href:"https://discord.royaleapi.dev",target:"_blank",rel:"noopener noreferrer"},d=a(`<ol><li>Ensure you have the <code>Allow Direct Messages from server members</code> option in <code>Privacy Settings</code> checked.</li><li>Go to the #developer-key channel.</li><li>Type <code>?crapikey get</code></li><li>The bot will send you a DM (direct message) with your key.</li></ol><h3 id="forgotten-keys" tabindex="-1"><a class="header-anchor" href="#forgotten-keys" aria-hidden="true">#</a> Forgotten keys</h3><p>To get a reminder of your developer key, visit the Discord channel above and type <code>?crapikey get</code> again and the bot will remind you with a DM again.</p><h3 id="removing-keys" tabindex="-1"><a class="header-anchor" href="#removing-keys" aria-hidden="true">#</a> Removing keys</h3><p>Simply <a href="/authentication?id=generating-new-keys">generate a new one</a> and it will invalidate all existing keys.</p><h2 id="code-examples" tabindex="-1"><a class="header-anchor" href="#code-examples" aria-hidden="true">#</a> Code examples</h2><p>Here are some code snippets on how to add custom headers in different languages.</p><table><thead><tr><th>Endpoint</th><th>URL</th><th>token</th></tr></thead><tbody><tr><td>clan</td><td>https://api.royaleapi.com/clan/2CCCP</td><td><code>a1234.567.890</code></td></tr></tbody></table><h3 id="curl" tabindex="-1"><a class="header-anchor" href="#curl" aria-hidden="true">#</a> cURL</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">--header</span> <span class="token string">&quot;auth: a1234.567.890&quot;</span> https://api.royaleapi.com/clan/2CCCP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-X</span> GET <span class="token punctuation">\\</span>
  https://api.royaleapi.com/clan/2CCCP <span class="token punctuation">\\</span>
  <span class="token parameter variable">-H</span> <span class="token string">&#39;Authorization: Bearer a1234.567.890&#39;</span> <span class="token punctuation">\\</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="c" tabindex="-1"><a class="header-anchor" href="#c" aria-hidden="true">#</a> C#</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> url<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">WebHeaderCollection</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WebHeaderCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    headers<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;auth: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">AuthToken</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpWebRequest</span> getRequest <span class="token operator">=</span> <span class="token punctuation">(</span>HttpWebRequest<span class="token punctuation">)</span>WebRequest<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    getRequest<span class="token punctuation">.</span>Method <span class="token operator">=</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">;</span>
    getRequest<span class="token punctuation">.</span>Headers <span class="token operator">=</span> headers<span class="token punctuation">;</span>
    <span class="token class-name">WebResponse</span> apiResponse <span class="token operator">=</span> getRequest<span class="token punctuation">.</span><span class="token function">GetResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StreamReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>apiResponse<span class="token punctuation">.</span><span class="token function">GetResponseStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> responseString <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">ReadToEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    apiResponse<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> responseString<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="c-restsharp" tabindex="-1"><a class="header-anchor" href="#c-restsharp" aria-hidden="true">#</a> C# RestSharp</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RestClient</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RestRequest</span><span class="token punctuation">(</span>Method<span class="token punctuation">.</span>GET<span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">AddHeader</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a1234.567.890&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">IRestResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-ok-http" tabindex="-1"><a class="header-anchor" href="#java-ok-http" aria-hidden="true">#</a> Java OK HTTP</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">OkHttpClient</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Request</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a1234.567.890&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Response</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">newCall</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-unirest" tabindex="-1"><a class="header-anchor" href="#java-unirest" aria-hidden="true">#</a> Java Unirest</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">HttpResponse</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> response <span class="token operator">=</span> <span class="token class-name">Unirest</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a1234.567.890&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="javascript-jquery-ajax" tabindex="-1"><a class="header-anchor" href="#javascript-jquery-ajax" aria-hidden="true">#</a> Javascript jQuery AJAX</h3>`,20),k={href:"https://api.jquery.com/",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> settings <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;async&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;crossDomain&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;auth&quot;</span><span class="token operator">:</span> <span class="token string">&quot;a1234.567.890&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span>settings<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="node-js" tabindex="-1"><a class="header-anchor" href="#node-js" aria-hidden="true">#</a> Node.js</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.royaleapi.com/clan/2CCCP&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token string">&#39;a1234.567.890&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Detailed example:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;request&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://api.royaleapi.com/clan/2CCCP&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token string">&#39;a1234.567.890&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> body</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="php" tabindex="-1"><a class="header-anchor" href="#php" aria-hidden="true">#</a> PHP</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$token</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;a1234.567.890&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$opts</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string double-quoted-string">&quot;http&quot;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string double-quoted-string">&quot;header&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;auth:&quot;</span> <span class="token operator">.</span> <span class="token variable">$token</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token variable">$context</span> <span class="token operator">=</span> <span class="token function">stream_context_create</span><span class="token punctuation">(</span><span class="token variable">$opts</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$test</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token variable">$context</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="php-httprequest" tabindex="-1"><a class="header-anchor" href="#php-httprequest" aria-hidden="true">#</a> PHP HttpRequest</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$request</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.royaleapi.com/clan/2CCCP&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">setMethod</span><span class="token punctuation">(</span><span class="token constant">HTTP_METH_GET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">setHeaders</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span>
  <span class="token string single-quoted-string">&#39;auth&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;a1234.567.890&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">echo</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HttpException</span> <span class="token variable">$ex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span> <span class="token variable">$ex</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="php-pecl-http" tabindex="-1"><a class="header-anchor" href="#php-pecl-http" aria-hidden="true">#</a> PHP pecl_http</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$client</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">http<span class="token punctuation">\\</span>Client</span><span class="token punctuation">;</span>
<span class="token variable">$request</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">http<span class="token punctuation">\\</span>Client<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>

<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">setRequestUrl</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;https://api.royaleapi.com/clan/2CCCP&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;GET&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">setHeaders</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span>
  <span class="token string single-quoted-string">&#39;auth&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;a1234.567.890&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="python-http-client-python-3" tabindex="-1"><a class="header-anchor" href="#python-http-client-python-3" aria-hidden="true">#</a> Python http.client (Python 3)</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> http<span class="token punctuation">.</span>client

conn <span class="token operator">=</span> http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HTTPConnection<span class="token punctuation">(</span><span class="token string">&quot;api.royaleapi.com&quot;</span><span class="token punctuation">)</span>

headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;auth&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;a1234.567.890&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

conn<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/clan/2CCCP&quot;</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

res <span class="token operator">=</span> conn<span class="token punctuation">.</span>getresponse<span class="token punctuation">(</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="python-aiohttp" tabindex="-1"><a class="header-anchor" href="#python-aiohttp" aria-hidden="true">#</a> Python (aiohttp)</h3>`,14),h={href:"https://aiohttp.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> aiohttp
headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;a1234.567.890&quot;</span><span class="token punctuation">}</span>
url <span class="token operator">=</span> <span class="token string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span>
<span class="token keyword">async</span> <span class="token keyword">with</span> aiohttp<span class="token punctuation">.</span>ClientSession<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span> <span class="token keyword">as</span> resp<span class="token punctuation">:</span>
        data <span class="token operator">=</span> <span class="token keyword">await</span> resp<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="python-requests" tabindex="-1"><a class="header-anchor" href="#python-requests" aria-hidden="true">#</a> Python (requests)</h3>`,2),b={href:"https://docs.python-requests.org",target:"_blank",rel:"noopener noreferrer"},g=a(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests

url <span class="token operator">=</span> <span class="token string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span>

headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;auth&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;a1234.567.890&quot;</span>
    <span class="token punctuation">}</span>

response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ruby-net-http" tabindex="-1"><a class="header-anchor" href="#ruby-net-http" aria-hidden="true">#</a> Ruby (NET::Http)</h3><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>
<span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;uri&#39;</span></span>
<span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;net/http&#39;</span></span>

url <span class="token operator">=</span> <span class="token constant">URI</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span></span><span class="token punctuation">)</span>

http <span class="token operator">=</span> Net<span class="token double-colon punctuation">::</span><span class="token class-name">HTTP</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>host<span class="token punctuation">,</span> url<span class="token punctuation">.</span>port<span class="token punctuation">)</span>

request <span class="token operator">=</span> Net<span class="token double-colon punctuation">::</span><span class="token constant">HTTP</span><span class="token double-colon punctuation">::</span><span class="token class-name">Get</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
request<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;auth&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;a1234.567.890&#39;</span></span>

response <span class="token operator">=</span> http<span class="token punctuation">.</span>request<span class="token punctuation">(</span>request<span class="token punctuation">)</span>
puts response<span class="token punctuation">.</span>read_body
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swift-nsurl" tabindex="-1"><a class="header-anchor" href="#swift-nsurl" aria-hidden="true">#</a> Swift (NSURL)</h3><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">import</span> <span class="token class-name">Foundation</span>

<span class="token keyword">let</span> headers <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string-literal"><span class="token string">&quot;auth&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;a1234.567.890&quot;</span></span><span class="token punctuation">,</span>
  <span class="token string-literal"><span class="token string">&quot;Cache-Control&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;no-cache&quot;</span></span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">let</span> request <span class="token operator">=</span> <span class="token class-name">NSMutableURLRequest</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token function">NSURL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://api.royaleapi.com/clan/2CCCP&quot;</span></span><span class="token punctuation">)</span><span class="token operator">!</span> <span class="token keyword">as</span> <span class="token constant">URL</span><span class="token punctuation">,</span>
                                        cachePolicy<span class="token punctuation">:</span> <span class="token punctuation">.</span>useProtocolCachePolicy<span class="token punctuation">,</span>
                                    timeoutInterval<span class="token punctuation">:</span> <span class="token number">10.0</span><span class="token punctuation">)</span>
request<span class="token punctuation">.</span>httpMethod <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;GET&quot;</span></span>
request<span class="token punctuation">.</span>allHTTPHeaderFields <span class="token operator">=</span> headers

<span class="token keyword">let</span> session <span class="token operator">=</span> <span class="token class-name">URLSession</span><span class="token punctuation">.</span>shared
<span class="token keyword">let</span> dataTask <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">dataTask</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> request <span class="token keyword">as</span> <span class="token class-name">URLRequest</span><span class="token punctuation">,</span> completionHandler<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> response<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span> <span class="token keyword">in</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token operator">!=</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> httpResponse <span class="token operator">=</span> response <span class="token keyword">as</span><span class="token operator">?</span> <span class="token class-name">HTTPURLResponse</span>
    <span class="token function">print</span><span class="token punctuation">(</span>httpResponse<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

dataTask<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function y(q,f){const t=o("ExternalLinkIcon");return c(),i("div",null,[u,s("p",null,[n("You can obtain and manage your developer key on "),s("a",r,[n("our discord server"),e(t)]),n(".")]),d,s("p",null,[n("We donâ€™t recommend that you access the API on the client side as you will be exposing your token publicly. However, this is how you would do it with "),s("a",k,[n("jQuery"),e(t)]),n(":")]),v,s("p",null,[n("Asynchronous python using the "),s("a",h,[n("aiohttp"),e(t)]),n(" library.")]),m,s("p",null,[n("Synchronous (blocking) Python using the "),s("a",b,[n("requests"),e(t)]),n(" library.")]),g])}const C=p(l,[["render",y],["__file","authentication.html.vue"]]);export{C as default};
